{"version":3,"sources":["rrss.png","MarkersExample.tsx","key.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["point4","data","Position","clusterClicked","e","console","log","azureHtmlMapMarkerOptions","coordinates","position","text","title","memoizedOptions","textOptions","textField","offset","iconOptions","image","eventToMarker","eventName","callback","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","MarkersExample","useState","markers","setMarkers","htmlMarkers","setHtmlMarkers","show","setshow","latitude","setlatitude","longitude","setlongitude","markersLayer","layerOptions","option","useMemo","authOptions","authType","AuthenticationType","subscriptionKey","center","zoom","view","useEffect","Axios","get","then","response","i","JSON","stringify","aux","length","newPoint","parseFloat","push","memoizedMarkerRender","map","marker","rendId","Math","random","id","toString","type","coordinate","renderPoint","memoizedHtmlMarkerRender","markerContent","className","options","events","renderHTMLPoint","classes","Container","component","maxWidth","src","logo","alt","style","height","CssBaseline","noValidate","onSubmit","event","preventDefault","post","addRandomMarker","TextField","value","onChange","target","variant","required","fullWidth","label","autoFocus","Button","color","Box","mt","styles","buttonContainer","size","onClick","delete","Chip","dataadded","cluster","clusterRadius","click","dbclick","lifecycleEvents","layeradded","gridAutoFlow","gridGap","gridAutoColumns","padding","button","backgroundColor","memo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22958ecd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rrss.f59d93fb.png\";","import React, { memo, useMemo, useState, useEffect} from 'react';\r\nimport {\r\n  AzureMap,\r\n  AzureMapDataSourceProvider,\r\n  AzureMapFeature,\r\n  AzureMapHtmlMarker,\r\n  AzureMapLayerProvider,\r\n  AzureMapsProvider,\r\n  IAzureDataSourceChildren,\r\n  IAzureMapFeature,\r\n  IAzureMapHtmlMarkerEvent,\r\n  IAzureMapLayerType,\r\n  IAzureMapOptions,\r\n} from 'react-azure-maps';\r\nimport { AuthenticationType, data, HtmlMarkerOptions, SymbolLayerOptions } from 'azure-maps-control';\r\nimport { Button, Chip} from '@material-ui/core';\r\nimport { key } from './key';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport logo from './rrss.png'\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\nconst point4 = new data.Position(10.28759658, 38.12764268);\r\n\r\nfunction clusterClicked(e: any) {\r\n  console.log('clusterClicked', e);\r\n}\r\n\r\nconst onClick = (e: any) => {\r\n  console.log('You click on: ', e);\r\n};\r\n\r\nfunction azureHtmlMapMarkerOptions(coordinates: data.Position): HtmlMarkerOptions {\r\n  return {\r\n    position: coordinates,\r\n    text: 'My text',\r\n    title: 'Title',\r\n  };\r\n}\r\n\r\nconst memoizedOptions: SymbolLayerOptions = {\r\n  \r\n  textOptions: {\r\n    textField: ['get', 'title'], //Specify the property name that contains the text you want to appear with the symbol.\r\n    offset: [0, 1.2],\r\n  },\r\n  iconOptions: {\r\n    image: \"pin-round-red\"\r\n  },\r\n};\r\n\r\nconst eventToMarker: Array<IAzureMapHtmlMarkerEvent> = [{ eventName: 'click', callback: onClick }];\r\n\r\nconst renderPoint = (coordinates: data.Position): IAzureMapFeature  => {\r\n  const rendId = Math.random();\r\n\r\n  return (\r\n    <AzureMapFeature\r\n      key={rendId}\r\n      id={rendId.toString()}\r\n      type=\"Point\"\r\n      coordinate={coordinates}\r\n    />\r\n  );\r\n};\r\n\r\nfunction renderHTMLPoint(coordinates: data.Position): any {\r\n  const rendId = Math.random();\r\n  return (\r\n    <AzureMapHtmlMarker\r\n      key={rendId}\r\n      markerContent={<div className=\"pulseIcon\"></div>}\r\n      options={{ ...azureHtmlMapMarkerOptions(coordinates) } as any}\r\n      events={eventToMarker}\r\n    />\r\n  );\r\n}\r\n\r\nconst colorValue = () =>\r\n  '#000000'.replace(/0/g, function () {\r\n    return (~~(Math.random() * 16)).toString(16);\r\n  });\r\nconst markersStandardImages = [\r\n  `pin-round-darkblue`,\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 1),\r\n  },\r\n}));\r\n\r\nconst rand = () => ( markersStandardImages[Math.floor(Math.random() * markersStandardImages.length)] )\r\nconst MarkersExample: React.FC = () => {\r\n  const [markers, setMarkers] = useState([] as any);\r\n  const [htmlMarkers, setHtmlMarkers] = useState([point4]);\r\n  const [show, setshow] = useState(false);\r\n  const [latitude, setlatitude] = useState('');\r\n  const [longitude, setlongitude] = useState('0');\r\n  const [markersLayer] = useState<IAzureMapLayerType>('SymbolLayer');\r\n  const [layerOptions, setLayerOptions] = useState<SymbolLayerOptions>(memoizedOptions);\r\n\r\n  const option: IAzureMapOptions = useMemo(() => {\r\n    return {\r\n      authOptions: {\r\n        authType: AuthenticationType.subscriptionKey,\r\n        subscriptionKey: key,\r\n      },\r\n      center: [1.482148, 39.020012],\r\n      zoom: 5,\r\n      view: 'Auto',\r\n    };\r\n  }, []);\r\n\r\n  const addRandomMarker = (event) => {\r\n    event.preventDefault()\r\n    const newPoint = new data.Position(parseFloat(longitude), parseFloat(latitude));\r\n    console.log(JSON.stringify(newPoint));\r\n    setMarkers([...markers, newPoint]);\r\n    setshow(false)\r\n    Axios.post(\"https://microsoftxopenarms.herokuapp.com/create\", {\r\n      longitude: longitude,\r\n      latitude: latitude,\r\n    }).then(() => {\r\n      console.log(\"sucess\")\r\n    });\r\n  };\r\n\r\n  const addRandomHTMLMarker = () => {\r\n    const newPoint = new data.Position(parseFloat(longitude), parseFloat(latitude));\r\n    setHtmlMarkers([...htmlMarkers, newPoint]);\r\n  };\r\n  const blabla = () => {\r\n    setshow(true);\r\n    setlongitude(\"\")\r\n    setlatitude(\"\")\r\n  };\r\n\r\n  const removeAllMarkers = () => {\r\n    setMarkers([]);\r\n    setHtmlMarkers([]);\r\n    Axios.delete(\"https://microsoftxopenarms.herokuapp.com/delete\").then(() => {\r\n      console.log(\"Everything was deleted\")\r\n    })\r\n  };\r\n\r\n    useEffect(() => {\r\n      // Your code here\r\n      Axios.get(\"https://microsoftxopenarms.herokuapp.com/coordenadas\").then((response) => {\r\n      console.log(JSON.stringify(response.data));\r\n      var i\r\n      var aux = [] as any;\r\n      console.log(\"NUMBER OF INCIDENTS IN DB \" + JSON.stringify(response.data.length))\r\n      for (i = 0; i < response.data.length; i++) {  \r\n      var newPoint = new data.Position(parseFloat(response.data[i].longitude), parseFloat(response.data[i].latitude));\r\n      console.log(JSON.stringify(newPoint));\r\n      aux.push(newPoint);\r\n      console.log(JSON.stringify(aux));\r\n      }\r\n      setMarkers(markers => ([...markers, ...aux]));\r\n      console.log(JSON.stringify(markers))})\r\n    }, []);\r\n\r\n  const memoizedMarkerRender: IAzureDataSourceChildren = useMemo(\r\n    (): any => markers.map((marker) => renderPoint(marker)),\r\n    [markers],\r\n  );\r\n\r\n\r\n\r\n  const memoizedHtmlMarkerRender: IAzureDataSourceChildren = useMemo(\r\n    (): any => htmlMarkers.map((marker) => renderHTMLPoint(marker)),\r\n    [htmlMarkers],\r\n  );\r\n\r\n  console.log('MarkerExample RENDER');\r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {show ? <Container component=\"main\" maxWidth=\"xs\">\r\n      <img src={logo} alt=\"Logo\" style={{height: \"100px\"}}/>\r\n      <CssBaseline />\r\n      <div className={classes.paper} style={{margin: \"0px\"}}>\r\n        <form className={classes.form} noValidate onSubmit={(event) => addRandomMarker(event)}>\r\n          <TextField value={longitude} onChange ={(e) => setlongitude(e.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Longitud\"\r\n            id=\"longitud\"\r\n            autoFocus\r\n            type=\"text\"\r\n          />\r\n          <TextField value={latitude} onChange ={(e) => setlatitude(e.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"latitude\"\r\n            type=\"text\"\r\n            label=\"Latitude\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Add\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n      </Box>\r\n    </Container> : null}\r\n      <div id = \"someRandomID\" style={styles.buttonContainer}>\r\n        <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={blabla}>\r\n          {' '}\r\n          REPORT VESSEL INCIDENT\r\n        </Button>\r\n        <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={removeAllMarkers}>\r\n          {' '}\r\n          REMOVE ALL\r\n        </Button>\r\n        <Chip label={`NUMBER OF INCIDENTS REPORTED: ${markers.length}`} />\r\n\r\n      </div>\r\n      <AzureMapsProvider>\r\n        <div style={styles.map} onClick={() => setshow(false)}>\r\n          <AzureMap options={option}>\r\n            <AzureMapDataSourceProvider\r\n              events={{\r\n                dataadded: (e: any) => {\r\n                  console.log('Data on source added', e);\r\n                },\r\n              }}\r\n              id={'markersExample AzureMapDataSourceProvider'}\r\n              options={{ cluster: true, clusterRadius: 2}}\r\n            >\r\n              <AzureMapLayerProvider\r\n                id={'markersExample AzureMapLayerProvider'}\r\n                options={layerOptions}\r\n                events={{\r\n                  click: clusterClicked,\r\n                  dbclick: clusterClicked,\r\n                }}\r\n                lifecycleEvents={{\r\n                  layeradded: () => {\r\n                    console.log('LAYER ADDED TO MAP');\r\n                  },\r\n                }}\r\n                type={markersLayer}\r\n              />\r\n              {memoizedMarkerRender}\r\n              {memoizedHtmlMarkerRender}\r\n            </AzureMapDataSourceProvider>\r\n          </AzureMap>\r\n        </div>\r\n      </AzureMapsProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  map: {\r\n    height: '100vh', width: '100vw'\r\n  },\r\n  buttonContainer: {\r\n    display: 'grid',\r\n    gridAutoFlow: 'column',\r\n    gridGap: '10px',\r\n    gridAutoColumns: 'max-content',\r\n    padding: '10px',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    height: 35,\r\n    width: 80,\r\n    backgroundColor: '#68aba3',\r\n    'text-align': 'center',\r\n  },\r\n};\r\nexport default memo(MarkersExample);","export const key = 'jpsA_SDgQGj9Izup-_tILp15aTq6s1tRfoXUNiPoLYI'\r\n\r\n","import * as React from 'react';\nimport MarkersExample from './MarkersExample';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <MarkersExample />\n    </div>\n  );\n};\n\nexport const wrapperStyles = {\n  wrapper: {\n    padding: '15px',\n    marginTop: '15px',\n  },\n  buttonContainer: {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gridGap: '10px',\n    gridAutoColumns: 'max-content',\n    padding: '10px 0',\n  },\n};\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}